# ===============================
# = LIQUIBASE
# ===============================
liquibase.change-log=classpath:/changelog/db.changelog-master.xml
liquibase.enabled=false
liquibase.url=jdbc:mysql://localhost:3306/springsecuritytutorial?createDatabaseIfNotExist=true&autoReconnect=true&autoReconnectForPools=true&is-connection-validation-required=true
liquibase.user=root
liquibase.password=password
liquibase.default-schema=springsecuritytutorial
# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.url=jdbc:mysql://localhost:3306/springsecuritytutorial?createDatabaseIfNotExist=true&autoReconnect=true&autoReconnectForPools=true&is-connection-validation-required=true
spring.datasource.username=root
spring.datasource.password=password
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.datasource.testOnBorrow=true
spring.datasource.timeBetweenEvictionRunsMillis = 3600000
# ===============================
# = JPA / HIBERNATE
# ===============================
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.database=default

gustavo.token.header=X-Auth-Token
gustavo.token.secret=sssshhhh!
gustavo.token.expiration=604800

# ===============================
# = Thymeleaf configurations
# ===============================
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false

logging.level.com.example = DEBUG
# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder  
# ==============================================================
spring.queries.users-query=select email, password, active from user where email=?
spring.queries.roles-query=select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?